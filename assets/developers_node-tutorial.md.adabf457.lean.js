import{c as l}from"./chunks/constants.e90b75b1.js";import{a as e}from"./chunks/arabica_versions.d0d52bfc.js";import{m as t}from"./chunks/mocha_versions.46bb62b1.js";import{o as c,c as r,k as s,t as a,l as n,a as p,Q as o}from"./chunks/framework.51d6c45b.js";const E=o("",19),i=s("p",null,"Set the version for your desired network:",-1),y={class:"vp-code-group vp-adaptive-theme"},d=o("",1),F={class:"blocks"},u={class:"language-bash vp-adaptive-theme active"},h=s("button",{title:"Copy Code",class:"copy"},null,-1),C=s("span",{class:"lang"},"bash",-1),g={class:"shiki github-dark vp-code-dark"},b={class:"line"},B=s("span",{style:{color:"#E1E4E8"}},"ver",-1),q=s("span",{style:{color:"#F97583"}},"=",-1),v={style:{color:"#9ECBFF"}},m={class:"shiki github-light vp-code-light"},k={class:"line"},f=s("span",{style:{color:"#24292E"}},"ver",-1),_=s("span",{style:{color:"#D73A49"}},"=",-1),A={style:{color:"#032F62"}},w={class:"language-bash vp-adaptive-theme"},D=s("button",{title:"Copy Code",class:"copy"},null,-1),T=s("span",{class:"lang"},"bash",-1),x={class:"shiki github-dark vp-code-dark"},O={class:"line"},P=s("span",{style:{color:"#E1E4E8"}},"ver",-1),R=s("span",{style:{color:"#F97583"}},"=",-1),S={style:{color:"#9ECBFF"}},I={class:"shiki github-light vp-code-light"},$={class:"line"},N=s("span",{style:{color:"#24292E"}},"ver",-1),H=s("span",{style:{color:"#D73A49"}},"=",-1),M={style:{color:"#032F62"}},U=o("",3),j=s("p",null,"The output will show the version installed.",-1),z=s("h2",{id:"celestia-node",tabindex:"-1"},[p("Celestia-node "),s("a",{class:"header-anchor",href:"#celestia-node","aria-label":'Permalink to "Celestia-node"'},"​")],-1),L=s("h3",{id:"install-celestia-node",tabindex:"-1"},[p("Install celestia-node "),s("a",{class:"header-anchor",href:"#install-celestia-node","aria-label":'Permalink to "Install celestia-node"'},"​")],-1),G=s("p",null,"Installing celestia-node for Arabica devnet or Mocha testnet means installing a specific version to be compatible with the network.",-1),V=s("p",null,"Install the celestia-node binary by running the following commands:",-1),Y=o("",1),W=s("p",null,"Check out to the desired version, based on the network you will use:",-1),X={class:"vp-code-group vp-adaptive-theme"},Q=o("",1),K={class:"blocks"},Z={class:"language-bash vp-adaptive-theme active"},J=s("button",{title:"Copy Code",class:"copy"},null,-1),ss=s("span",{class:"lang"},"bash",-1),as={class:"shiki github-dark vp-code-dark"},ns={class:"line"},os=s("span",{style:{color:"#B392F0"}},"git",-1),ls=s("span",{style:{color:"#E1E4E8"}}," ",-1),ps=s("span",{style:{color:"#9ECBFF"}},"checkout",-1),es=s("span",{style:{color:"#E1E4E8"}}," ",-1),ts={style:{color:"#9ECBFF"}},cs={class:"shiki github-light vp-code-light"},rs={class:"line"},Es=s("span",{style:{color:"#6F42C1"}},"git",-1),is=s("span",{style:{color:"#24292E"}}," ",-1),ys=s("span",{style:{color:"#032F62"}},"checkout",-1),ds=s("span",{style:{color:"#24292E"}}," ",-1),Fs={style:{color:"#032F62"}},us={class:"language-bash vp-adaptive-theme"},hs=s("button",{title:"Copy Code",class:"copy"},null,-1),Cs=s("span",{class:"lang"},"bash",-1),gs={class:"shiki github-dark vp-code-dark"},bs={class:"line"},Bs=s("span",{style:{color:"#B392F0"}},"git",-1),qs=s("span",{style:{color:"#E1E4E8"}}," ",-1),vs=s("span",{style:{color:"#9ECBFF"}},"checkout",-1),ms=s("span",{style:{color:"#E1E4E8"}}," ",-1),ks={style:{color:"#9ECBFF"}},fs={class:"shiki github-light vp-code-light"},_s={class:"line"},As=s("span",{style:{color:"#6F42C1"}},"git",-1),ws=s("span",{style:{color:"#24292E"}}," ",-1),Ds=s("span",{style:{color:"#032F62"}},"checkout",-1),Ts=s("span",{style:{color:"#24292E"}}," ",-1),xs={style:{color:"#032F62"}},Os=o("",4),Ps=o("",55),Rs={class:"language-bash vp-adaptive-theme"},Ss=s("button",{title:"Copy Code",class:"copy"},null,-1),Is=s("span",{class:"lang"},"bash",-1),$s={class:"shiki github-dark vp-code-dark"},Ns={class:"line"},Hs=s("span",{style:{color:"#F97583"}},"export",-1),Ms=s("span",{style:{color:"#E1E4E8"}}," NODE_STORE",-1),Us=s("span",{style:{color:"#F97583"}},"=",-1),js=s("span",{style:{color:"#E1E4E8"}},"$HOME",-1),zs={style:{color:"#9ECBFF"}},Ls={class:"shiki github-light vp-code-light"},Gs={class:"line"},Vs=s("span",{style:{color:"#D73A49"}},"export",-1),Ys=s("span",{style:{color:"#24292E"}}," NODE_STORE",-1),Ws=s("span",{style:{color:"#D73A49"}},"=",-1),Xs=s("span",{style:{color:"#24292E"}},"$HOME",-1),Qs={style:{color:"#032F62"}},Ks=o("",34),Zs=o("",89),ta=JSON.parse('{"title":"Celestia-node RPC CLI tutorial","description":"","frontmatter":{"next":{"text":"Prompt Scavenger","link":"/developers/prompt-scavenger"},"head":[["meta",{"name":"og:title","content":"Celestia-node RPC CLI tutorial | Celestia Docs"},{"name":"og:description","content":false}]]},"headers":[],"relativePath":"developers/node-tutorial.md","filePath":"developers/node-tutorial.md","lastUpdated":1698105562000}'),Js={name:"developers/node-tutorial.md"},ca=Object.assign(Js,{setup(sa){return(aa,na)=>(c(),r("div",null,[E,s("ol",null,[s("li",null,[i,s("div",y,[d,s("div",F,[s("div",u,[h,C,s("pre",g,[s("code",null,[s("span",b,[B,q,s("span",v,'"'+a(n(l).golangNodeMocha)+'"',1)])])]),s("pre",m,[s("code",null,[s("span",k,[f,_,s("span",A,'"'+a(n(l).golangNodeMocha)+'"',1)])])])]),s("div",w,[D,T,s("pre",x,[s("code",null,[s("span",O,[P,R,s("span",S,'"'+a(n(l).golangNodeArabica)+'"',1)])])]),s("pre",I,[s("code",null,[s("span",$,[N,H,s("span",M,'"'+a(n(l).golangNodeArabica)+'"',1)])])])])])])]),U]),j,z,L,G,V,s("ol",null,[Y,s("li",null,[W,s("div",X,[Q,s("div",K,[s("div",Z,[J,ss,s("pre",as,[s("code",null,[s("span",ns,[os,ls,ps,es,s("span",ts,"tags/"+a(n(t)["node-latest-tag"]),1)])])]),s("pre",cs,[s("code",null,[s("span",rs,[Es,is,ys,ds,s("span",Fs,"tags/"+a(n(t)["node-latest-tag"]),1)])])])]),s("div",us,[hs,Cs,s("pre",gs,[s("code",null,[s("span",bs,[Bs,qs,vs,ms,s("span",ks,"tags/"+a(n(e)["node-latest-tag"]),1)])])]),s("pre",fs,[s("code",null,[s("span",_s,[As,ws,Ds,Ts,s("span",xs,"tags/"+a(n(e)["node-latest-tag"]),1)])])])])])])]),Os]),Ps,s("p",null,"To set your node store for a light node on "+a(n(l).mochaChainId)+", you can use the following command:",1),s("div",Rs,[Ss,Is,s("pre",$s,[s("code",null,[s("span",Ns,[Hs,Ms,Us,js,s("span",zs,"/.celestia-light-"+a(n(l).mochaChainId),1)])])]),s("pre",Ls,[s("code",null,[s("span",Gs,[Vs,Ys,Ws,Xs,s("span",Qs,"/.celestia-light-"+a(n(l).mochaChainId),1)])])])]),Ks,s("p",null,[p("Here is an example command to retrieve the data from above, on "),s("code",null,a(n(l).arabicaChainId),1),p(":")]),Zs]))}});export{ta as __pageData,ca as default};
